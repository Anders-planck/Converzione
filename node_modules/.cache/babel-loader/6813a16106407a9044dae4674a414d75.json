{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anders\\\\OneDrive\\\\Bureau\\\\work\\\\sperimento\\\\converzione\\\\src\\\\AddComponents\\\\Binario.js\";\nimport React, { Component } from 'react';\nimport '../scss/binario.scss';\n\nclass Binario extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      'NumberBinaire': 0,\n      'NumberDecimale': [],\n      'Resultato': 0,\n      'message': '',\n      'B': 0,\n      'N': 0\n    };\n\n    this.Vedi = e => {\n      e.preventDefault();\n      let modulo = 0;\n      let list = [];\n      let List = [];\n\n      if (this.state.NumberBinaire == 0 || this.state.NumberDecimale == 0) {\n        this.Risultato(this.state.Resultato);\n      }\n\n      if (parseInt(this.state.NumberBinaire) != 0) {\n        let i = 0;\n        let rest = parseInt(this.state.NumberBinaire);\n\n        while (rest > 0) {\n          modulo = rest % 2;\n          rest = parseInt(rest / 2);\n          list[i] = modulo;\n          i++;\n          console.log(list);\n        }\n\n        for (let s = 0; s < list.length; s++) {\n          List[s] = list[list.length - s - 1];\n        }\n\n        this.setState(this.state, () => {\n          this.state.Resultato = List;\n          console.log(\" risult   \" + this.state.Resultato);\n        });\n        console.log(\"List  \" + List);\n        this.Risultato(List);\n      }\n\n      if (this.state.NumberDecimale !== 0) {}\n    };\n\n    this.GetValueBin = e => {\n      let nouvo = e.target.value;\n      this.setState(this.state, () => {\n        console.log(isNaN(parseInt(nouvo)));\n\n        if (isNaN(parseInt(nouvo)) === false) {\n          this.state.NumberBinaire = parseInt(nouvo);\n          this.state.message = '';\n          this.state.B = 0;\n        } else {\n          this.state.message = 'Veuillez Inserer Un Numbre';\n          this.state.B = 1;\n        }\n      });\n      let element = document.getElementsByClassName('Resultato');\n      element[0].innerHTML = null;\n    };\n\n    this.GetValueDic = e => {\n      let nouv = e.target.value;\n      this.setState(this.state, () => {\n        if (nouv != '') {\n          this.state.NumberDecimale = [];\n          this.state.message = '';\n\n          for (let i = 0; i < nouv.length; i++) {\n            if (isNaN(parseInt(nouv[i])) === false) {\n              this.state.NumberDecimale.push(parseInt(nouv[i]));\n              this.state.D = 0;\n            } else {\n              this.state.message = 'Veuillez Inserer Un Numbre';\n              this.state.D = 1;\n            }\n          }\n\n          console.log(this.state.NumberDecimale);\n        } else {\n          this.state.message = 'Veuillez Inserer Un Numbre';\n          this.state.D = 1;\n        }\n      });\n      console.log(this.state.NumberDecimale);\n      let element = document.getElementsByClassName('Resultato');\n      element.innerHTML = null;\n    };\n\n    this.Item = () => {\n      if (this.state.B === 1 && this.state.message) {\n        return /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 22\n          }\n        }, this.state.message);\n      }\n\n      if (this.state.D === 1 && this.state.message) {\n        return /*#__PURE__*/React.createElement(\"h6\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 22\n          }\n        }, this.state.message);\n      }\n    };\n  }\n\n  span(Resultato) {\n    return \"<h6>\" + \"Risultato : \" + \"<span>\" + Resultato + \"</span>\" + \"</h6>\";\n  }\n\n  Risultato(Resultato) {\n    var elements = document.getElementsByClassName('Resultato');\n\n    for (var i = 0; i < elements.length; i++) {\n      elements[i].innerHTML = this.span(Resultato);\n    }\n\n    console.log(\"final  \" + Resultato);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"binario\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }\n    }, \" conversion \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 32\n      }\n    }), \"base [ 10 --> 2  &&  [ 2 --> 10 ]\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 27\n      }\n    }, \"convert To binario\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 27\n      }\n    }, this.Item()), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.Vedi,\n      className: \"form_10_2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Number\",\n      className: \"txtb\",\n      name: \"base10\",\n      onChange: this.GetValueBin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"convert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 31\n      }\n    }, \" ->  \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 27\n      }\n    }, \"convert To decimal\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errore\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 27\n      }\n    }, this.Item()), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.Vedi,\n      className: \"form_2_10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Number\",\n      className: \"txtb\",\n      name: \"base10\",\n      onChange: this.GetValueDic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"convert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }\n    }, \" -> \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Resultato space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }))));\n  }\n\n}\n\nexport default Binario;","map":{"version":3,"sources":["C:/Users/Anders/OneDrive/Bureau/work/sperimento/converzione/src/AddComponents/Binario.js"],"names":["React","Component","Binario","state","Vedi","e","preventDefault","modulo","list","List","NumberBinaire","NumberDecimale","Risultato","Resultato","parseInt","i","rest","console","log","s","length","setState","GetValueBin","nouvo","target","value","isNaN","message","B","element","document","getElementsByClassName","innerHTML","GetValueDic","nouv","push","D","Item","span","elements","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../scss/binario.scss'\r\n\r\n\r\n\r\n\r\nclass Binario extends Component {\r\n\r\n  state=\r\n      {\r\n          'NumberBinaire': 0,\r\n          'NumberDecimale':[],\r\n          'Resultato':0,\r\n          'message':'',\r\n          'B':0,\r\n          'N':0\r\n      }\r\n\r\n\r\n    Vedi=(e)=>{\r\n        e.preventDefault();\r\n        let modulo = 0;\r\n        let list = [];\r\n        let List=[];\r\n        if(this.state.NumberBinaire == 0 || this.state.NumberDecimale==0){\r\n            this.Risultato(this.state.Resultato)\r\n        }\r\n        if (parseInt(this.state.NumberBinaire) != 0) {\r\n                let i = 0;\r\n               let rest=parseInt(this.state.NumberBinaire)\r\n                while ( rest>0) {\r\n                    modulo = rest % 2;\r\n                    rest =  parseInt(rest / 2);\r\n                    list[i] = modulo;\r\n                    i++;\r\n                    console.log(list)\r\n                }\r\n\r\n                for (let s = 0; s < list.length; s++) {\r\n                    List[s] = list[list.length - s - 1]\r\n                }\r\n                this.setState(this.state, () => {\r\n                    this.state.Resultato = List;\r\n                    console.log(\" risult   \"+this.state.Resultato)\r\n                })\r\n                console.log(\"List  \"+List)\r\n                this.Risultato(List)\r\n            }\r\n            if (this.state.NumberDecimale !== 0) {\r\n\r\n            }\r\n\r\n\r\n    }\r\n    span(Resultato){\r\n      return(\"<h6>\"+\"Risultato : \"+\"<span>\"+Resultato+\"</span>\"+\"</h6>\");\r\n    }\r\n\r\n    Risultato(Resultato) {\r\n      var elements =document.getElementsByClassName('Resultato')\r\n    for (var i =0 ;i<elements.length;i++){\r\n        elements[i].innerHTML=this.span(Resultato)\r\n\r\n    }\r\n        console.log( \"final  \"+ Resultato)\r\n    }\r\n\r\n    GetValueBin=(e)=>{\r\n\r\n      let nouvo =e.target.value\r\n     this.setState(this.state,()=> {\r\n         console.log(isNaN(parseInt(nouvo)))\r\n           if (isNaN(parseInt(nouvo))===false){\r\n               this.state.NumberBinaire=parseInt(nouvo);\r\n               this.state.message='';\r\n               this.state.B=0;\r\n\r\n           }else{\r\n               this.state.message='Veuillez Inserer Un Numbre';\r\n               this.state.B=1;\r\n           }\r\n\r\n         }\r\n     )\r\n        let element =document.getElementsByClassName('Resultato');\r\n\r\n       element[0].innerHTML=null;\r\n    }\r\n\r\n\r\n    GetValueDic=(e)=> {\r\n        let nouv = e.target.value;\r\n        this.setState(this.state, () => {\r\n                if (nouv!='') {\r\n                    this.state.NumberDecimale=[];\r\n                    this.state.message = '';\r\n                    for (let i = 0; i < nouv.length; i++) {\r\n                        if (isNaN(parseInt(nouv[i])) === false) {\r\n                            this.state.NumberDecimale.push(parseInt(nouv[i]));\r\n                            this.state.D = 0;\r\n                        } else {\r\n                            this.state.message = 'Veuillez Inserer Un Numbre'\r\n                            this.state.D = 1;\r\n                        }\r\n                    }\r\n                    console.log(this.state.NumberDecimale)\r\n                } else {\r\n                    this.state.message = 'Veuillez Inserer Un Numbre';\r\n                    this.state.D = 1;\r\n                }\r\n            }\r\n        )\r\n        console.log(this.state.NumberDecimale)\r\n        let element = document.getElementsByClassName('Resultato');\r\n        element.innerHTML = null;\r\n\r\n    };\r\n\r\n      Item=()=>{\r\n\r\n          if(this.state.B===1 && this.state.message){\r\n              return <h6>{this.state.message}</h6>;\r\n\r\n          }\r\n          if(this.state.D===1 && this.state.message){\r\n              return <h6>{this.state.message}</h6>;\r\n\r\n          }\r\n      };\r\n    render() {\r\n        return (\r\n            <div className='binario'>\r\n               <h3> conversion <br />base [ 10 --> 2  &&  [ 2 --> 10 ]</h3>\r\n               <div className='forms'>\r\n                  <div className='form'>\r\n\r\n                      <div className='space'>\r\n                          <h5>convert To binario</h5>\r\n                          <div className='errore'>\r\n                              {this.Item()}\r\n                          </div>\r\n                          <form onSubmit={this.Vedi} className='form_10_2 '>\r\n                              <input type=\"text\" placeholder=\"Your Number\" className=\"txtb\" name='base10' onChange={this.GetValueBin} />\r\n                              <button className='convert' > ->  </button>\r\n                          </form>\r\n\r\n                      </div>\r\n                      <div className='space'>\r\n                          <h5>convert To decimal</h5>\r\n                          <div className='errore'>\r\n                              {this.Item()}\r\n                          </div>\r\n                          <form onSubmit={this.Vedi} className='form_2_10' >\r\n                              <input type=\"text\" placeholder=\"Your Number\" className=\"txtb\" name='base10' onChange={this.GetValueDic}/>\r\n                              <button className='convert' > -> </button>\r\n                          </form>\r\n                      </div>\r\n                      <div className='Resultato space'>\r\n                      </div>\r\n                  </div>\r\n\r\n               </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Binario;"]},"metadata":{},"sourceType":"module"}